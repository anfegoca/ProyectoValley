#BlueJ class context
comment0.target=Valley
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Valley\ here.\r\n\r\n\ @author\ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=width\ height
comment1.target=Valley(int,\ int)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Valley\r\n
comment10.params=trap\ x
comment10.target=void\ makePuncture(int,\ int)
comment10.text=\r\n\ Hace\ un\ hueco\ en\ la\ lona\ dada\ en\ la\ posicion\ dada\r\n\ @param\ trap\ numero\ de\ la\ lona\r\n\ @param\ x\ posici\u00F3n\ donde\ se\ realizar\u00E1\ el\ hueco\r\n
comment11.params=trap\ position
comment11.target=void\ patchPuncture(int,\ int)
comment11.text=\r\n\ Tapa\ un\ hueco\ en\ la\ lona\ dada\ en\ la\ posici\u00F3n\ dada\r\n\ @param\ trap\ numero\ de\ la\ lona\r\n\ @param\ x\ posici\u00F3n\ donde\ se\ tapar\u00E1\ el\ hueco\r\n
comment12.params=x\ y
comment12.target=int[]\ next(int,\ int)
comment13.params=x
comment13.target=void\ startRain(int)
comment13.text=\r\n\ Hace\ caer\ lluvia\ en\ la\ posici\u00F3n\ x\ del\ valle\r\n\ @param\ x\ posici\u00F3n\ desde\ donde\ saldr\u00E1\ la\ lluvia\r\n
comment14.params=x
comment14.target=void\ stopRain(int)
comment14.text=\r\n\ Detiene\ la\ lluvia\ de\ la\ poici\u00F3n\ dada\r\n\ @param\ x\ posici\u00F3n\ del\ valle\ de\ donde\ se\ va\ a\ detener\ la\ lluvia\r\n\ \ \r\n
comment15.params=
comment15.target=java.lang.String[]\ rainFalls()
comment15.text=\r\n\ Muestra\ los\ nombre\ de\ los\ vi\u00F1edos\ que\ est\u00E1n\ recibiendo\ lluvia.\r\n\ @return\ lista\ con\ los\ nombres\ de\ los\ vi\u00F1edos\ que\ est\u00E1n\ recibiendo\ lluvia\r\n
comment16.params=
comment16.target=int[][]\ vineyards()
comment16.text=\r\n\ Consulta\ las\ posiciones\ de\ los\ vi\u00F1edos\r\n\ @return\ posi\ matriz\ con\ las\ posiciones\ de\ los\ vi\u00F1edos\r\n
comment17.params=
comment17.target=java.util.ArrayList\ traps()
comment17.text=\r\n\ Consulta\ las\ cordenadas\ de\ sus\ esquinas\ con\ las\ posiciones\ de\ sus\ agujeros\r\n\ @return\ mm\ matriz\ con\ las\ cordenadas\ de\ sus\ esquinas\ con\ sus\ respectivos\ posiciones\ de\ agujeros\r\n
comment18.params=
comment18.target=java.util.ArrayList\ rains()
comment18.text=\r\n\ Devuelve\ informaci\u00F3n\ del\ recoorido\ de\ la\ lluvia\r\n\ @param\ posi\ coordenadas\ del\ recorrido\ de\ la\ lluvia\r\n
comment19.params=
comment19.target=void\ undo()
comment2.params=name\ xi\ xf
comment2.target=void\ openVineyard(java.lang.String,\ int,\ int)
comment2.text=\r\n\ Crea\ un\ vi\u00F1edo\r\n\ @param\ name\ nombre\ del\ vi\u00F1edo\r\n\ @param\ xi\ posici\u00F3n\ inicial\ en\ el\ eje\ x\r\n\ @param\ xf\ posici\u00F3n\ final\ en\ el\ eje\ x\r\n
comment3.params=
comment3.target=void\ makeVisible()
comment3.text=\r\n\ Make\ valley\ visible\r\n\r\n
comment4.params=
comment4.target=void\ actualizar()
comment5.params=z
comment5.target=void\ zoom(char)
comment5.text=\r\n\ Hace\ zoom\ al\ valle\r\n\ @param\ z\ "+"\ para\ acercar\ o\ "-"\ para\ alejar\r\n\ \r\n
comment6.params=
comment6.target=void\ makeInvisible()
comment6.text=\r\n\ Make\ valley\ invisible\r\n
comment7.params=name
comment7.target=void\ closeVineyard(java.lang.String)
comment7.text=\r\n\ Cierra\ un\ vi\u00F1edo\ dado\ su\ nombre\r\n\ @param\ name\ Nombre\ del\ vi\u00F1edo\r\n
comment8.params=lowerEnd\ higherEnd
comment8.target=void\ addTrap(int[],\ int[])
comment8.text=\r\n\ Agrega\ una\ lona\ dadas\ 2\ coordenadas\r\n\ @lowerEnd\ arreglo\ con\ la\ coordenada\ del\ primer\ punto\r\n\ @higherEnd\ arreglo\ con\ la\ coordenada\ del\ segundo\ punto\ \r\n
comment9.params=position
comment9.target=void\ removeTrap(int)
comment9.text=\r\n\ Quita\ una\ lona\ dada\ la\ posici\u00F3n\r\n\ @param\ position\r\n
numComments=20
